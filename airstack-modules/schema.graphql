enum AirNetwork {
  ARBITRUM_ONE
  ARWEAVE_MAINNET
  AURORA
  AVALANCHE
  BOBA
  BSC # aka BNB Chain
  CELO
  COSMOS
  CRONOS
  MAINNET # Ethereum Mainnet
  FANTOM
  FUSE
  HARMONY
  JUNO
  MOONBEAM
  MOONRIVER
  NEAR_MAINNET
  OPTIMISM
  OSMOSIS
  MATIC # aka Polygon
  XDAI # aka Gnosis Chain
}
enum AirProtocolType {
  GENERIC
  EXCHANGE
  LENDING
  YIELD
  BRIDGE
  DAO
  NFT_MARKET_PLACE
  STAKING
  P2E #play to earn
  LAUNCHPAD
}

enum AirTransactionType { # TODO: Think if this should be just Action Types.
  SALE
  MINT
  GIFT 
}

enum AirProtocolActionType {
  ALL ##to track all action stats of a dapp
  ### NFT Marketplace/Tokens ###
  BUY
  SELL
  MINT
  BURN # TODO check this later
  ### NFT (ex: Poap) ###
  ATTEND
  ### P2E (NFT + Utility) ###
  EARN
  ### DEX ###
  SWAP
  ADD_LIQUIDITY
  REMOVE_LIQUIDITY
  ADD_TO_FARM
  REMOVE_FROM_FARM
  CLAIM_FARM_REWARD
  ### Lending ###
  LEND
  BORROW
  FLASH_LOAN
  ### Staking / Delegating ###
  STAKE
  RESTAKE
  UNSTAKE
  DELEGATE
  CLAIM_REWARDS
}


type AirBlock @entity {
 id: ID! #chainID-number
 hash: String!
 number: BigInt!
 timestamp: BigInt!
}


type AirMeta @entity {
  id: ID! # air_meta 
  network: String!
  schemaVersion: String!
  slug: String! #Opensea_V1
  name: String! # Opeasea V1
}

type AirEntityCounter @entity {
	id: ID! #Air_DAILY_STATS_ACCOUNT
	count: BigInt!
	createdAt: AirBlock! 
	lastUpdatedAt: AirBlock!
}

type AirAccount @entity {
  id: ID!
  address: String!
	createdAt: AirBlock! 
}


type AirToken @entity {
	id: ID! #chain-address
  address: String!
  transactions: [AirNftTransaction!] @derivedFrom(field: "transactionToken")
}


interface AirTransaction {
	id: ID ! #chain-hash-logIndex-< add as per context > NFT marketplace will have tokenId
  from: AirAccount!
  to: AirAccount!
  hash: String! #todo: Check if this should be bytes
  block: AirBlock!
	type: AirTransactionType!
  index: BigInt!
  protocolType: AirProtocolType!
  protocolActionType: AirProtocolActionType!
}


type AirNftTransaction implements AirTransaction @entity {
  id: ID!
  from: AirAccount!
  to: AirAccount!
  hash: String! #todo: Check if this should be bytes
  block: AirBlock!
	type: AirTransactionType!
  index: BigInt!
  protocolType: AirProtocolType!
  protocolActionType: AirProtocolActionType!
	tokenId: BigInt! #nft
  tokenAmount:BigInt!   #nft 
	transactionToken: AirToken!   #nft
	paymentToken: AirToken #payment
  paymentAmount: BigInt #payment
  royalties: [AirNftSaleRoyalty!] @derivedFrom(field: "nftTransaction")
  feeAmount: BigInt
  feeBeneficiary: AirAccount
  tokenMetadata: AirTokenMetadata
}

type AirNftSaleRoyalty @entity{
  id: ID! #AirNftTransaction(ID) + royalty beneficiary
  amount: BigInt!
  beneficiary: String!
  nftTransaction: AirNftTransaction!
}

type AirTokenMetadata @entity {
  id: ID!
	displayContentType: AirTokenDisplayType!
  displayContent: String
}

enum AirTokenDisplayType {
  IMAGE
  VIDEO
  AUDIO
  TEXT_IMAGE
  TEXT
}
type AirExtraData @entity {
  id: ID!
  name: String!
  value: String!
}