// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CancelAllOrders extends ethereum.Event {
  get params(): CancelAllOrders__Params {
    return new CancelAllOrders__Params(this);
  }
}

export class CancelAllOrders__Params {
  _event: CancelAllOrders;

  constructor(event: CancelAllOrders) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newMinNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CancelMultipleOrders extends ethereum.Event {
  get params(): CancelMultipleOrders__Params {
    return new CancelMultipleOrders__Params(this);
  }
}

export class CancelMultipleOrders__Params {
  _event: CancelMultipleOrders;

  constructor(event: CancelMultipleOrders) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get orderNonces(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class NewCurrencyManager extends ethereum.Event {
  get params(): NewCurrencyManager__Params {
    return new NewCurrencyManager__Params(this);
  }
}

export class NewCurrencyManager__Params {
  _event: NewCurrencyManager;

  constructor(event: NewCurrencyManager) {
    this._event = event;
  }

  get currencyManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewExecutionManager extends ethereum.Event {
  get params(): NewExecutionManager__Params {
    return new NewExecutionManager__Params(this);
  }
}

export class NewExecutionManager__Params {
  _event: NewExecutionManager;

  constructor(event: NewExecutionManager) {
    this._event = event;
  }

  get executionManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewProtocolFeeRecipient extends ethereum.Event {
  get params(): NewProtocolFeeRecipient__Params {
    return new NewProtocolFeeRecipient__Params(this);
  }
}

export class NewProtocolFeeRecipient__Params {
  _event: NewProtocolFeeRecipient;

  constructor(event: NewProtocolFeeRecipient) {
    this._event = event;
  }

  get protocolFeeRecipient(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewRoyaltyFeeManager extends ethereum.Event {
  get params(): NewRoyaltyFeeManager__Params {
    return new NewRoyaltyFeeManager__Params(this);
  }
}

export class NewRoyaltyFeeManager__Params {
  _event: NewRoyaltyFeeManager;

  constructor(event: NewRoyaltyFeeManager) {
    this._event = event;
  }

  get royaltyFeeManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class NewTransferSelectorNFT extends ethereum.Event {
  get params(): NewTransferSelectorNFT__Params {
    return new NewTransferSelectorNFT__Params(this);
  }
}

export class NewTransferSelectorNFT__Params {
  _event: NewTransferSelectorNFT;

  constructor(event: NewTransferSelectorNFT) {
    this._event = event;
  }

  get transferSelectorNFT(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoyaltyPayment extends ethereum.Event {
  get params(): RoyaltyPayment__Params {
    return new RoyaltyPayment__Params(this);
  }
}

export class RoyaltyPayment__Params {
  _event: RoyaltyPayment;

  constructor(event: RoyaltyPayment) {
    this._event = event;
  }

  get collection(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get royaltyRecipient(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get currency(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class TakerAsk extends ethereum.Event {
  get params(): TakerAsk__Params {
    return new TakerAsk__Params(this);
  }
}

export class TakerAsk__Params {
  _event: TakerAsk;

  constructor(event: TakerAsk) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get orderNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get taker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get maker(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get strategy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get currency(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class TakerBid extends ethereum.Event {
  get params(): TakerBid__Params {
    return new TakerBid__Params(this);
  }
}

export class TakerBid__Params {
  _event: TakerBid;

  constructor(event: TakerBid) {
    this._event = event;
  }

  get orderHash(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get orderNonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get taker(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get maker(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get strategy(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get currency(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get collection(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class LooksRareExchange extends ethereum.SmartContract {
  static bind(address: Address): LooksRareExchange {
    return new LooksRareExchange("LooksRareExchange", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  WETH(): Address {
    let result = super.call("WETH", "WETH():(address)", []);

    return result[0].toAddress();
  }

  try_WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH", "WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currencyManager(): Address {
    let result = super.call(
      "currencyManager",
      "currencyManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_currencyManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "currencyManager",
      "currencyManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  executionManager(): Address {
    let result = super.call(
      "executionManager",
      "executionManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_executionManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "executionManager",
      "executionManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isUserOrderNonceExecutedOrCancelled(
    user: Address,
    orderNonce: BigInt
  ): boolean {
    let result = super.call(
      "isUserOrderNonceExecutedOrCancelled",
      "isUserOrderNonceExecutedOrCancelled(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(orderNonce)
      ]
    );

    return result[0].toBoolean();
  }

  try_isUserOrderNonceExecutedOrCancelled(
    user: Address,
    orderNonce: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isUserOrderNonceExecutedOrCancelled",
      "isUserOrderNonceExecutedOrCancelled(address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(orderNonce)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  protocolFeeRecipient(): Address {
    let result = super.call(
      "protocolFeeRecipient",
      "protocolFeeRecipient():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_protocolFeeRecipient(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "protocolFeeRecipient",
      "protocolFeeRecipient():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  royaltyFeeManager(): Address {
    let result = super.call(
      "royaltyFeeManager",
      "royaltyFeeManager():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_royaltyFeeManager(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "royaltyFeeManager",
      "royaltyFeeManager():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  transferSelectorNFT(): Address {
    let result = super.call(
      "transferSelectorNFT",
      "transferSelectorNFT():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_transferSelectorNFT(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "transferSelectorNFT",
      "transferSelectorNFT():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userMinOrderNonce(param0: Address): BigInt {
    let result = super.call(
      "userMinOrderNonce",
      "userMinOrderNonce(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_userMinOrderNonce(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userMinOrderNonce",
      "userMinOrderNonce(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _currencyManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _executionManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _royaltyFeeManager(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _WETH(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _protocolFeeRecipient(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelAllOrdersForSenderCall extends ethereum.Call {
  get inputs(): CancelAllOrdersForSenderCall__Inputs {
    return new CancelAllOrdersForSenderCall__Inputs(this);
  }

  get outputs(): CancelAllOrdersForSenderCall__Outputs {
    return new CancelAllOrdersForSenderCall__Outputs(this);
  }
}

export class CancelAllOrdersForSenderCall__Inputs {
  _call: CancelAllOrdersForSenderCall;

  constructor(call: CancelAllOrdersForSenderCall) {
    this._call = call;
  }

  get minNonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelAllOrdersForSenderCall__Outputs {
  _call: CancelAllOrdersForSenderCall;

  constructor(call: CancelAllOrdersForSenderCall) {
    this._call = call;
  }
}

export class CancelMultipleMakerOrdersCall extends ethereum.Call {
  get inputs(): CancelMultipleMakerOrdersCall__Inputs {
    return new CancelMultipleMakerOrdersCall__Inputs(this);
  }

  get outputs(): CancelMultipleMakerOrdersCall__Outputs {
    return new CancelMultipleMakerOrdersCall__Outputs(this);
  }
}

export class CancelMultipleMakerOrdersCall__Inputs {
  _call: CancelMultipleMakerOrdersCall;

  constructor(call: CancelMultipleMakerOrdersCall) {
    this._call = call;
  }

  get orderNonces(): Array<BigInt> {
    return this._call.inputValues[0].value.toBigIntArray();
  }
}

export class CancelMultipleMakerOrdersCall__Outputs {
  _call: CancelMultipleMakerOrdersCall;

  constructor(call: CancelMultipleMakerOrdersCall) {
    this._call = call;
  }
}

export class MatchAskWithTakerBidCall extends ethereum.Call {
  get inputs(): MatchAskWithTakerBidCall__Inputs {
    return new MatchAskWithTakerBidCall__Inputs(this);
  }

  get outputs(): MatchAskWithTakerBidCall__Outputs {
    return new MatchAskWithTakerBidCall__Outputs(this);
  }
}

export class MatchAskWithTakerBidCall__Inputs {
  _call: MatchAskWithTakerBidCall;

  constructor(call: MatchAskWithTakerBidCall) {
    this._call = call;
  }

  get takerBid(): MatchAskWithTakerBidCallTakerBidStruct {
    return changetype<MatchAskWithTakerBidCallTakerBidStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get makerAsk(): MatchAskWithTakerBidCallMakerAskStruct {
    return changetype<MatchAskWithTakerBidCallMakerAskStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class MatchAskWithTakerBidCall__Outputs {
  _call: MatchAskWithTakerBidCall;

  constructor(call: MatchAskWithTakerBidCall) {
    this._call = call;
  }
}

export class MatchAskWithTakerBidCallTakerBidStruct extends ethereum.Tuple {
  get isOrderAsk(): boolean {
    return this[0].toBoolean();
  }

  get taker(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get minPercentageToAsk(): BigInt {
    return this[4].toBigInt();
  }

  get params(): Bytes {
    return this[5].toBytes();
  }
}

export class MatchAskWithTakerBidCallMakerAskStruct extends ethereum.Tuple {
  get isOrderAsk(): boolean {
    return this[0].toBoolean();
  }

  get signer(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get strategy(): Address {
    return this[6].toAddress();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get nonce(): BigInt {
    return this[8].toBigInt();
  }

  get startTime(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }

  get minPercentageToAsk(): BigInt {
    return this[11].toBigInt();
  }

  get params(): Bytes {
    return this[12].toBytes();
  }

  get v(): i32 {
    return this[13].toI32();
  }

  get r(): Bytes {
    return this[14].toBytes();
  }

  get s(): Bytes {
    return this[15].toBytes();
  }
}

export class MatchAskWithTakerBidUsingETHAndWETHCall extends ethereum.Call {
  get inputs(): MatchAskWithTakerBidUsingETHAndWETHCall__Inputs {
    return new MatchAskWithTakerBidUsingETHAndWETHCall__Inputs(this);
  }

  get outputs(): MatchAskWithTakerBidUsingETHAndWETHCall__Outputs {
    return new MatchAskWithTakerBidUsingETHAndWETHCall__Outputs(this);
  }
}

export class MatchAskWithTakerBidUsingETHAndWETHCall__Inputs {
  _call: MatchAskWithTakerBidUsingETHAndWETHCall;

  constructor(call: MatchAskWithTakerBidUsingETHAndWETHCall) {
    this._call = call;
  }

  get takerBid(): MatchAskWithTakerBidUsingETHAndWETHCallTakerBidStruct {
    return changetype<MatchAskWithTakerBidUsingETHAndWETHCallTakerBidStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get makerAsk(): MatchAskWithTakerBidUsingETHAndWETHCallMakerAskStruct {
    return changetype<MatchAskWithTakerBidUsingETHAndWETHCallMakerAskStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class MatchAskWithTakerBidUsingETHAndWETHCall__Outputs {
  _call: MatchAskWithTakerBidUsingETHAndWETHCall;

  constructor(call: MatchAskWithTakerBidUsingETHAndWETHCall) {
    this._call = call;
  }
}

export class MatchAskWithTakerBidUsingETHAndWETHCallTakerBidStruct extends ethereum.Tuple {
  get isOrderAsk(): boolean {
    return this[0].toBoolean();
  }

  get taker(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get minPercentageToAsk(): BigInt {
    return this[4].toBigInt();
  }

  get params(): Bytes {
    return this[5].toBytes();
  }
}

export class MatchAskWithTakerBidUsingETHAndWETHCallMakerAskStruct extends ethereum.Tuple {
  get isOrderAsk(): boolean {
    return this[0].toBoolean();
  }

  get signer(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get strategy(): Address {
    return this[6].toAddress();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get nonce(): BigInt {
    return this[8].toBigInt();
  }

  get startTime(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }

  get minPercentageToAsk(): BigInt {
    return this[11].toBigInt();
  }

  get params(): Bytes {
    return this[12].toBytes();
  }

  get v(): i32 {
    return this[13].toI32();
  }

  get r(): Bytes {
    return this[14].toBytes();
  }

  get s(): Bytes {
    return this[15].toBytes();
  }
}

export class MatchBidWithTakerAskCall extends ethereum.Call {
  get inputs(): MatchBidWithTakerAskCall__Inputs {
    return new MatchBidWithTakerAskCall__Inputs(this);
  }

  get outputs(): MatchBidWithTakerAskCall__Outputs {
    return new MatchBidWithTakerAskCall__Outputs(this);
  }
}

export class MatchBidWithTakerAskCall__Inputs {
  _call: MatchBidWithTakerAskCall;

  constructor(call: MatchBidWithTakerAskCall) {
    this._call = call;
  }

  get takerAsk(): MatchBidWithTakerAskCallTakerAskStruct {
    return changetype<MatchBidWithTakerAskCallTakerAskStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get makerBid(): MatchBidWithTakerAskCallMakerBidStruct {
    return changetype<MatchBidWithTakerAskCallMakerBidStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class MatchBidWithTakerAskCall__Outputs {
  _call: MatchBidWithTakerAskCall;

  constructor(call: MatchBidWithTakerAskCall) {
    this._call = call;
  }
}

export class MatchBidWithTakerAskCallTakerAskStruct extends ethereum.Tuple {
  get isOrderAsk(): boolean {
    return this[0].toBoolean();
  }

  get taker(): Address {
    return this[1].toAddress();
  }

  get price(): BigInt {
    return this[2].toBigInt();
  }

  get tokenId(): BigInt {
    return this[3].toBigInt();
  }

  get minPercentageToAsk(): BigInt {
    return this[4].toBigInt();
  }

  get params(): Bytes {
    return this[5].toBytes();
  }
}

export class MatchBidWithTakerAskCallMakerBidStruct extends ethereum.Tuple {
  get isOrderAsk(): boolean {
    return this[0].toBoolean();
  }

  get signer(): Address {
    return this[1].toAddress();
  }

  get collection(): Address {
    return this[2].toAddress();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get tokenId(): BigInt {
    return this[4].toBigInt();
  }

  get amount(): BigInt {
    return this[5].toBigInt();
  }

  get strategy(): Address {
    return this[6].toAddress();
  }

  get currency(): Address {
    return this[7].toAddress();
  }

  get nonce(): BigInt {
    return this[8].toBigInt();
  }

  get startTime(): BigInt {
    return this[9].toBigInt();
  }

  get endTime(): BigInt {
    return this[10].toBigInt();
  }

  get minPercentageToAsk(): BigInt {
    return this[11].toBigInt();
  }

  get params(): Bytes {
    return this[12].toBytes();
  }

  get v(): i32 {
    return this[13].toI32();
  }

  get r(): Bytes {
    return this[14].toBytes();
  }

  get s(): Bytes {
    return this[15].toBytes();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateCurrencyManagerCall extends ethereum.Call {
  get inputs(): UpdateCurrencyManagerCall__Inputs {
    return new UpdateCurrencyManagerCall__Inputs(this);
  }

  get outputs(): UpdateCurrencyManagerCall__Outputs {
    return new UpdateCurrencyManagerCall__Outputs(this);
  }
}

export class UpdateCurrencyManagerCall__Inputs {
  _call: UpdateCurrencyManagerCall;

  constructor(call: UpdateCurrencyManagerCall) {
    this._call = call;
  }

  get _currencyManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateCurrencyManagerCall__Outputs {
  _call: UpdateCurrencyManagerCall;

  constructor(call: UpdateCurrencyManagerCall) {
    this._call = call;
  }
}

export class UpdateExecutionManagerCall extends ethereum.Call {
  get inputs(): UpdateExecutionManagerCall__Inputs {
    return new UpdateExecutionManagerCall__Inputs(this);
  }

  get outputs(): UpdateExecutionManagerCall__Outputs {
    return new UpdateExecutionManagerCall__Outputs(this);
  }
}

export class UpdateExecutionManagerCall__Inputs {
  _call: UpdateExecutionManagerCall;

  constructor(call: UpdateExecutionManagerCall) {
    this._call = call;
  }

  get _executionManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateExecutionManagerCall__Outputs {
  _call: UpdateExecutionManagerCall;

  constructor(call: UpdateExecutionManagerCall) {
    this._call = call;
  }
}

export class UpdateProtocolFeeRecipientCall extends ethereum.Call {
  get inputs(): UpdateProtocolFeeRecipientCall__Inputs {
    return new UpdateProtocolFeeRecipientCall__Inputs(this);
  }

  get outputs(): UpdateProtocolFeeRecipientCall__Outputs {
    return new UpdateProtocolFeeRecipientCall__Outputs(this);
  }
}

export class UpdateProtocolFeeRecipientCall__Inputs {
  _call: UpdateProtocolFeeRecipientCall;

  constructor(call: UpdateProtocolFeeRecipientCall) {
    this._call = call;
  }

  get _protocolFeeRecipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateProtocolFeeRecipientCall__Outputs {
  _call: UpdateProtocolFeeRecipientCall;

  constructor(call: UpdateProtocolFeeRecipientCall) {
    this._call = call;
  }
}

export class UpdateRoyaltyFeeManagerCall extends ethereum.Call {
  get inputs(): UpdateRoyaltyFeeManagerCall__Inputs {
    return new UpdateRoyaltyFeeManagerCall__Inputs(this);
  }

  get outputs(): UpdateRoyaltyFeeManagerCall__Outputs {
    return new UpdateRoyaltyFeeManagerCall__Outputs(this);
  }
}

export class UpdateRoyaltyFeeManagerCall__Inputs {
  _call: UpdateRoyaltyFeeManagerCall;

  constructor(call: UpdateRoyaltyFeeManagerCall) {
    this._call = call;
  }

  get _royaltyFeeManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateRoyaltyFeeManagerCall__Outputs {
  _call: UpdateRoyaltyFeeManagerCall;

  constructor(call: UpdateRoyaltyFeeManagerCall) {
    this._call = call;
  }
}

export class UpdateTransferSelectorNFTCall extends ethereum.Call {
  get inputs(): UpdateTransferSelectorNFTCall__Inputs {
    return new UpdateTransferSelectorNFTCall__Inputs(this);
  }

  get outputs(): UpdateTransferSelectorNFTCall__Outputs {
    return new UpdateTransferSelectorNFTCall__Outputs(this);
  }
}

export class UpdateTransferSelectorNFTCall__Inputs {
  _call: UpdateTransferSelectorNFTCall;

  constructor(call: UpdateTransferSelectorNFTCall) {
    this._call = call;
  }

  get _transferSelectorNFT(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateTransferSelectorNFTCall__Outputs {
  _call: UpdateTransferSelectorNFTCall;

  constructor(call: UpdateTransferSelectorNFTCall) {
    this._call = call;
  }
}
