type ReverseRegistrar @entity {
  id: ID!
  name: String!
  domain: AirDomain!
  createdAt: AirBlock!
}

type PrimaryDomain @entity {
  id: ID! #resolvedAddress
  domain: AirDomain! #address's primary domain (if set)
  lastUpdatedAt: AirBlock!
}

type DomainVsIsMigratedMapping @entity {
  id: ID! #domain
  isMigrated: Boolean!
  lastUpdatedAt: AirBlock!
}

#
# --Airstack Schemas--

type AirBlock @entity {
 id: ID! #chain-number
 hash: String!
 number: BigInt!
 timestamp: BigInt!
}

type AirMeta @entity {
  id: ID! # air_meta 
  network: String!
  schemaVersion: String!
  slug: String! #Opensea_V1
  name: String! # Opeasea V1
	version: String!
}

type AirEntityCounter @entity {
	id: ID! #AIR_DAILY_STATS_ACCOUNT
	count: BigInt!
	createdAt: AirBlock! 
	lastUpdatedAt: AirBlock!
}

type AirExtra @entity {
  id: ID! # Concatenation of domainId and name
  name: String!
  value: String!
}

type AirAccount @entity {
  id: ID!
  address: String!
  createdAt: AirBlock!
}

type LabelhashToNameMapping @entity {
  id: ID! #labelhash
  name: String!
  createdAt: String!
}

